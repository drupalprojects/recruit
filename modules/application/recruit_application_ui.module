<?php
// $Id$

/**
 * @file
 */

/**
 * Implements hook_menu().
 */
function recruit_application_ui_menu() {
  $items = array();

  $items['admin/recruit/applications/add'] = array(
    'title' => 'Create application',
    'description' => 'Advertise application listing.',
    'page callback' => 'recruit_application_ui_add_page',
    'access callback' => 'recruit_application_ui_application_add_any_access',
    'weight' => 10,
    'file' => 'includes/recruit_application_ui.applications.inc',
  );

  foreach (recruit_application_types() as $type => $application_type) {
    $items['admin/recruit/applications/add/' . $type] = array(
      'title' => 'Create @name',
      'title arguments' => array('@name' => $application_type->name),
      'description' => $application_type->description,
      'page callback' => 'recruit_application_ui_application_form_wrapper',
      'page arguments' => array(recruit_application_new($type)),
      'access callback' => 'recruit_application_access',
      'access arguments' => array('create', $type),
      'file' => 'includes/recruit_application_ui.applications.inc',
    );
  }

  $items['admin/recruit/applications/%recruit_application'] = array(
    'title callback' => 'recruit_application_ui_application_title',
    'title arguments' => array(3),
    'page callback' => 'recruit_application_ui_application_form_wrapper',
    'page arguments' => array(3),
    'access callback' => 'recruit_application_access',
    'access arguments' => array('update', 3),
    'weight' => 0,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'file' => 'includes/recruit_application_ui.applications.inc',
    'type' => MENU_CALLBACK,
  );

  $items['admin/recruit/applications/%recruit_application/edit'] = array(
    'title' => 'Edit',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
  );
  
  $items['admin/recruit/applications/%recruit_application/delete'] = array(
    'title' => 'Delete a application',
    'page callback' => 'recruit_application_ui_application_delete_form_wrapper',
    'page arguments' => array(3),
    'access callback' => 'recruit_application_access',
    'access arguments' => array('update', 3),
    'type' => MENU_CALLBACK,
    'file' => 'includes/recruit_application_ui.applications.inc',
  );

  $items['admin/recruit/applications/types'] = array(
    'title' => 'Application types',
    'description' => 'Manage application types.',
    'page callback' => 'recruit_application_ui_types_overview',
    'access arguments' => array('administer application types'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 0,
    'file' => 'includes/recruit_application_ui.types.inc',
  );

  $items['admin/recruit/applications/types/add'] = array(
    'title' => 'Add application type',
    'page callback' => 'recurit_application_ui_application_type_form_wrapper',
    'page arguments' => array(recruit_application_type_new()),
    'access arguments' => array('administer application types'),
    'type' => MENU_LOCAL_ACTION | MENU_VISIBLE_IN_BREADCRUMB,
    'file' => 'includes/recruit_application_ui.types.inc',
  );

  $items['admin/recruit/applications/types/%recruit_application_type'] = array(
    'title callback' => 'recruit_application_type_title',
    'title arguments' => array(4),
    'page callback' => 'recurit_application_ui_application_type_form_wrapper',
    'page arguments' => array(4),
    'access arguments' => array('administer application types'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/recruit_application_ui.types.inc',
  );

  $items['admin/recruit/applications/types/%recruit_application_type/edit'] = array(
    'title' => 'Edit',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
  );

  $items['admin/recruit/applications/types/%recruit_application_type/delete'] = array(
    'title' => 'Delete',
    'page callback' => 'recruit_application_ui_application_type_delete_form_wrapper',
    'page arguments' => array(4),
    'access arguments' => array('administer application types'),
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_INLINE,
    'weight' => 10,
    'file' => 'includes/recruit_application_ui.types.inc',
  );

  
  return $items;
}

/**
 * Access callback: determine if the user can create any type of application.
 */
function recruit_application_ui_application_add_any_access() {
  // Grant automatic access to users with administer applications permission.
  if (user_access('administer applications')) {
    return TRUE;
  }

  // Check the user's access on a application type basis.
  foreach (recruit_application_types() as $type => $application_type) {
    if (recruit_application_access('create', $type)) {
      return TRUE;
    }
  }

  return FALSE;
}

/**
 * Implements hook_theme().
 */
function recruit_application_ui_theme() {
  return array(
    'application_add_list' => array(
      'variables' => array('content' => array()),
      'file' => 'includes/recruit_application_ui.applications.inc',
    ),
    'application_type_admin_overview' => array(
      'variables' => array('type' => NULL),
      'file' => 'includes/recruit_application_ui.types.inc',
    ),
    'application_view_page' => array(
      'render element' => 'elements',
      'template' => 'theme/recruit-application',
    ),
  );
}

/**
 * Implements hook_forms().
 */
function recruit_application_ui_forms($form_id, $args) {
  $forms = array();

  // Define a wrapper ID for the application type add / edit form.
  $forms['recruit_application_ui_application_type_form'] = array(
    'callback' => 'recruit_application_application_type_form',
  );

  // Define a wrapper ID for the application type delete confirmation form.
  $forms['recruit_application_ui_application_type_delete_form'] = array(
    'callback' => 'recruit_application_application_type_delete_form',
  );

  // Define a wrapper ID for the application add / edit form.
  $forms['recruit_application_ui_application_form'] = array(
    'callback' => 'recruit_application_application_form',
  );

  // Define a wrapper ID for the application delete confirmation form.
  $forms['recruit_application_ui_application_delete_form'] = array(
    'callback' => 'recruit_application_application_delete_form',
  );

  return $forms;
}

/**
 * Menu item title callback: returns the application refernce of a application for its pages.
 *
 * @param $application
 *   The application object as loaded via the URL wildcard.
 * @return
 *   A page title of the format "Application Ref: [application reference]".
 */
function recruit_application_ui_application_title($application) {
  return t('Application Ref: @application_ref', array('@application_ref' => $application->application_ref));
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * @see recruit_application_ui_application_form()
 */
function recruit_application_ui_form_recruit_application_ui_application_form_alter(&$form, &$form_state) {

  $form['actions']['submit']['#submit'][] = 'recruit_application_ui_application_form_submit';

  if (empty($form_state['recruit_application']->application_id)) {
    $form['actions']['save_continue'] = array(
      '#type' => 'submit',
      '#value' => t('Save and add another'),
      '#submit' => $form['actions']['submit']['#submit'],
      '#suffix' => l('Cancel', 'admin/recruit/applications'),
      '#weight' => 45,
    );
  }
  else {
    $form['actions']['submit']['#suffix'] = l('Cancel', 'admin/recruit/applications');
  }
}

/**
 * Submit callback for recruit_application_ui_application_form().
 *
 * @see recruit_application_ui_form_recruit_application_ui_application_form_alter()
 */
function recruit_application_ui_application_form_submit($form, &$form_state) {
  // Set the redirect based on the button clicked.
  if ($form_state['clicked_button']['#parents'][0] == 'save_continue') {
    $form_state['redirect'] = 'admin/recruit/applications/add/' . $form_state['recruit_application']->type;
  }
  elseif (arg(2) == 'applications' && arg(3) == 'add') {
    $form_state['redirect'] = 'admin/recruit/applications';
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * @see recruit_application_ui_application_delete_form()
 */
function recruit_application_ui_form_recruit_application_ui_application_delete_form_alter(&$form, &$form_state) {
  $form['actions']['cancel']['#markup'] = l(t('Cancel'), 'admin/recruit/applications');

  $form['#submit'][] = 'recruit_application_ui_application_delete_form_submit';
}

/**
 * Submit callback for recruit_application_ui_application_delete_form().
 *
 * @see recruit_application_ui_form_recruit_application_ui_application_delete_form_alter()
 */
function recruit_application_ui_application_delete_form_submit($form, &$form_state) {
  $form_state['redirect'] = 'admin/recruit/applications';
}

/**
 * Sets the breadcrumb for administrative application pages.
 *
 * @param $application_types
 */
function recruit_application_ui_set_breadcrumb($application_types = FALSE) {
  $breadcrumb = array(
    l(t('Home'), '<front>'),
    l(t('Administration'), 'admin'),
    l(t('Recruit'), 'admin/recruit'),
    l(t('Applications'), 'admin/recruit/applications'),
  );

  if ($application_types) {
    $breadcrumb[] = l(t('Application types'), 'admin/Recruit/applications/types');
  }

  drupal_set_breadcrumb($breadcrumb);
}

/**
 * Implements hook_entity_info_alter().
 */
function recruit_application_ui_entity_info_alter(&$entity_info) {
  // Add a URI callback to the application entity.
  $entity_info['recruit_application']['uri callback'] = 'recruit_application_ui_uri';

  // Expose the admin UI for application fields.
  foreach ($entity_info['recruit_application']['bundles'] as $type => &$bundle) {
    $bundle['admin'] = array(
      'path' => 'admin/recruit/applications/types/%recruit_application_type',
      'real path' => 'admin/recruit/applications/types/' . $type,
      'bundle argument' => 4,
      'access arguments' => array('administer application types'),
    );
  }
}

/**
 * Entity uri callback: points to the edit form of the given application.
 */
function recruit_application_ui_uri($application) {
  // Only return a value if the user has permission to view the application.
  if (recruit_application_access('view', $application)) {
    return array(
      'path' => 'admin/recruit/applications/' . $application->application_id,
    );
  }

  return NULL;
}


/**
 * Implements hook_form_alter().
 */
function recruit_application_ui_form_alter(&$form, &$form_state, $form_id) {
  // On field administration forms for application types add a breadcrumb.
  if (in_array($form_id, array('field_ui_field_overview_form', 'field_ui_display_overview_form'))) {
    if ($form['#entity_type'] == 'recruit_application') {
      recruit_application_ui_set_breadcrumb(TRUE);
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * @see recruit_application_ui_recruit_type_form()
 */
function recruit_application_ui_form_recruit_application_ui_application_type_form_alter(&$form, &$form_state) {

  $form['actions']['submit']['#submit'][] = 'recruit_application_ui_application_type_form_submit';

  if (!empty($form_state['application_type']->type)) {
    $form['actions']['delete'] = array(
      '#type' => 'submit',
      '#value' => t('Delete application type'),
      '#suffix' => l('Cancel', 'admin/recruit/applications/types'),
      '#submit' => array('recruit_application_ui_application_type_form_delete_submit'),
      '#weight' => 45,
    );
  }
  else {
    $form['actions']['save_continue'] = array(
      '#type' => 'submit',
      '#value' => t('Save and add fields'),
      '#suffix' => l('Cancel', 'admin/recruit/applications/types'),
      '#submit' => array('recruit_application_application_type_form_submit', 'recruit_application_ui_application_type_form_submit'),
      '#weight' => 45,
    );
  }
}

/**
 * Submit callback for delete button on recruit_application_ui_application_type_form().
 *
 * @see recruit_application_ui_form_recruit_application_ui_application_type_form_alter()
 */
function recruit_application_ui_application_type_form_delete_submit($form, &$form_state) {
  $form_state['redirect'] = 'admin/recruit/applications/types/' . $form_state['application_type']->type .'/delete';
}

/**
 * Submit callback for recruit_application_ui_application_type_form().
 *
 * @see recruit_application_ui_form_recruit_application_ui_application_type_form_alter()
 */
function recruit_application_ui_application_type_form_submit($form, &$form_state) {
  if ($form_state['clicked_button']['#parents'][0] == 'save_continue') {
    $form_state['redirect'] = 'admin/recruit/applications/types/' . $form_state['application_type']->type . '/fields';
  }
  else {
    $form_state['redirect'] = 'admin/recruit/applications/types';
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * @see recruit_application_ui_application_type_delete_form()
 */
function recruit_application_ui_form_recruit_application_ui_application_type_delete_form_alter(&$form, &$form_state) {
  $form['actions']['cancel']['#markup'] = l(t('Cancel'), 'admin/recruit/applications/types');

  $form['#submit'][] = 'recruit_application_ui_application_type_delete_form_submit';
}

/**
 * Submit callback for recruit_application_ui_application_type_delete_form().
 *
 * @see recruit_application_ui_form_recruit_application_ui_application_type_delete_form_alter()
 */
function recruit_application_ui_application_type_delete_form_submit($form, &$form_state) {
  $form_state['redirect'] = 'admin/recruit/applications/types';
}

/**
 * Implements hook_menu_alter().
 */
function recruit_application_ui_menu_alter(&$items) {
  $items['admin/recruit/applications/types/%recruit_application_type/fields']['context'] = MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE;
  $items['admin/recruit/applications/types/%recruit_application_type/display']['context'] = MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE;
}

/**
 * Implements hook_menu_local_tasks_alter().
 */
function recruit_application_ui_menu_local_tasks_alter(&$data, $router_item, $root_path) {
  if ($root_path == 'admin/recruit/applications') {
    $item = menu_get_item('admin/recruit/applications/add');
    if ($item['access']) {
      $data['actions']['output'][] = array(
        '#theme' => 'menu_local_action',
        '#link' => $item,
      );
    }
  }
}

/**
 * Implements hook_admin_menu_map().
 */
function recruit_application_ui_admin_menu_map() {
  $map['admin/recruit/applications/types/%recruit_application_type'] = array(
    'parent' => 'admin/recruit/applications/types',
    'arguments' => array(
      array('%recruit_application_type' => array_keys(recruit_application_types())),
    ),
  );

  return $map;
}

/**
 * Implements hook_help().
 */
function recruit_application_ui_help($path, $arg) {
  switch ($path) {
    case 'admin/recruit/applications/types/add':
      return '<p>' . t('Individual application types can have different fields assigned to them.') . '</p>';
  }

  // Return the user defined help text per application type when adding applications.
  if ($arg[1] == 'recruit' && $arg[2] == 'application' && $arg[3] == 'add' && $arg[4]) {
    $application_type = recruit_application_type_load(str_replace('-', '_', $arg[4]));
    return (!empty($application_type->help) ? '<p>' . filter_xss_admin($application_type->help) . '</p>' : '');
  }
}

/**
 * Implements hook_views_api().
 */
function recruit_application_ui_views_api() {
  return array(
    'api' => 2,
    'path' => drupal_get_path('module', 'recruit_application_ui') . '/includes/views',
  );
}