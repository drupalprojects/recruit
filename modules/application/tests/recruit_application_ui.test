<?php

/**
 * @file
 * Functional tests for the application module.
 */

/**
 * Test the application and application type CRUD.
 */
class RecruitApplicationUIAdminTest extends RecruitBaseTestCase {

  public static function getInfo() {
    return array(
      'name' => 'Recruit application administration UI',
      'description' => 'Tests creating, deleting and editing applications and applicaiton types.',
      'group' => 'Recruit',
    );
  }

  function setUp() {
    parent::setUp('recruit_application_ui');
    
    // User creation for different operations.
    $this->recruit_admin = $this->createRecruitAdmin();
    $this->recruiter = $this->createRecruiter();
    $this->candidate = $this->createCandidate();
  }

  /**
   * Test the admin menus for applications
   */
  public function testRecruitApplicationUIAdminMenus() {
    // Login with store admin.
    $this->drupalLogin($this->recruit_admin);

    // Access to the recruit admin section.
    $this->drupalGet('admin/recruit');
    $this->assertResponse(200, t('Recruit admin user can access the recruit admin section'));
    
    // Ensure link to application list is present.
    $this->assertText(t('Applications'), t('%applications link is present in the recruit admin section (admin/recruit)', array('%applications' => t('Applications'))));
    // Ensure that the "Create application" link does NOT appear in the recruit admin section (admin/recruit).
    $this->assertNoText(t('Create application'), t('Ensure that the "%createapplication" link does NOT appear in the recruit admin section (admin/recruit)', array('%createapplication' => t('Create application'))));
  }

  /**
   * Test the permissions to access the application listing.
   */
  public function testRecruitApplicationUIAccessApplicationList() {
    // Login with normal user.
    $this->drupalLogin($this->candidate);

    // Access to the admin application list.
    $this->drupalGet('admin/recruit/applications');

    $this->assertResponse(403, t('Normal user is not able to access the application admin list page'));


    // Login as recruiter..
    $this->drupalLogin($this->recruiter);

    // Access to the admin application list.
    $this->drupalGet('admin/recruit/applications');

    $this->assertResponse(200, t('Recruit admin user can access the application admin list page'));

    // Ensure that the link is NOT available to recriters.
    $this->assertNoText(t('Create application'), t('%createapplication link is NOT present in the admin list page', array('%createapplication' => t('Create application'))));
    // Ensure that the views empty is present.
    $this->assertText(t('No applications have been created yet.'), t('The views empty text "%application_empty_text" should appear.', array('%application_empty_text' => t('No applications have been created yet.'))));

    // Login with recruit admin.
    $this->drupalLogin($this->recruit_admin);

    // Access to the admin application list.
    $this->drupalGet('admin/recruit/applications');

    $this->assertResponse(200, t('Recruit admin user can access the application admin list page'));

    // Ensure that the link for creating applications is in place.
    $this->assertText(t('Create application'), t('%createapplication link is present in the admin list page', array('%createapplication' => t('Create application'))));
    // Ensure that the views empty is present.
    $this->assertText(t('No applications have been created yet.'), t('The views empty text "%application_empty_text" should appear.', array('%application_empty_text' => t('No applications have been created yet.'))));
  }
}