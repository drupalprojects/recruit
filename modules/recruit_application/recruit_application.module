<?php

/**
 * @file
 * Defines recruit_application entity.
 */

/**
 * Implements hook_entity_info().
 */
function recruit_application_entity_info() {
  $includes = drupal_get_path('module', 'recruit_application') . '/includes';
  $return = array(
    'recruit_application' => array(
      'label' => t('application'),
      'entity class' => 'RecruitApplication',
      'controller class' => 'RecruitApplicationController',
      'base table' => 'recruit_application',
      'fieldable' => TRUE,
      'entity keys' => array(
        'id' => 'aid',
        'bundle' => 'type',
      ),
      'bundle keys' => array(
        'bundle' => 'type',
      ),
      'bundles' => array(),
      'load hook' => 'recruit_application_load',
      'view modes' => array(
        'full' => array(
          'label' => t('Default'),
          'custom settings' => FALSE,
        ),
      ),
      'label callback' => 'entity_class_label',
      'uri callback' => 'entity_class_uri',
      'module' => 'recruit_application',
      'access callback' => 'recruit_application_access',
    ),
  );
  $return['recruit_application_type'] = array(
    'label' => t('application Type'),
    'entity class' => 'RecruitApplicationType',
    'controller class' => 'RecruitApplicationTypeController',
    'base table' => 'recruit_application_type',
    'fieldable' => FALSE,
    'bundle of' => 'recruit_application',
    'exportable' => TRUE,
    'entity keys' => array(
      'id' => 'id',
      'name' => 'type',
      'label' => 'label',
    ),
    'module' => 'recruit_application',
    // Enable the entity API's admin UI.
    'admin ui' => array(
      'path' => 'admin/structure/application-types',
      'file' => 'recruit_application.admin.inc',
      'controller class' => 'RecruitApplicationTypeUIController',
      'file path' => $includes,
    ),
    'access callback' => 'recruit_application_type_access',
  );

  return $return;
}

/**
 * Implements hook_entity_info_alter().
 */
function recruit_application_entity_info_alter(&$entity_info) {
  foreach (recruit_application_types() as $type => $info) {
    $entity_info['recruit_application']['bundles'][$type] = array(
      'label' => $info->label,
      'admin' => array(
        'path' => 'admin/structure/application-types/manage/%recruit_application_type',
        'real path' => 'admin/structure/application-types/manage/' . $type,
        'bundle argument' => 4,
      ),
    );
  }
}

/**
 * Implements hook_menu().
 */
function recruit_application_menu() {
  $includes = drupal_get_path('module', 'recruit_application') . '/includes';
  $items = array();
  // @TODO Allow admins to create applications.
  $items['application/add'] = array(
    'title' => 'Add application',
    'page callback' => 'recruit_application_admin_add_page',
    'access arguments' => array('administer recruit_application entities'),
    'file' => 'recruit_application.admin.inc',
    'file path' => $includes,
    'type' => MENU_LOCAL_ACTION,
    'tab_parent' => 'application',
    'tab_root' => 'application',
  );

  $application_uri = 'application/%recruit_application';
  $application_uri_argument_position = 1;

  $items[$application_uri] = array(
    'title callback' => 'entity_label',
    'title arguments' => array('recruit_application', $application_uri_argument_position),
    'page callback' => 'recruit_application_view',
    'page arguments' => array($application_uri_argument_position),
    'access callback' => 'entity_access',
    'access arguments' => array('view', 'recruit_application', $application_uri_argument_position),
    'file' => 'recruit_application.pages.inc',
    'file path' => $includes,
  );

  $items[$application_uri . '/view'] = array(
    'title' => 'View',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );

  $items[$application_uri . '/delete'] = array(
    'title' => 'Delete application',
    'title callback' => 'recruit_application_label',
    'title arguments' => array($application_uri_argument_position),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('recruit_application_delete_form', $application_uri_argument_position),
    'access callback' => 'entity_access',
    'access arguments' => array('edit', 'recruit_application', $application_uri_argument_position),
    'file' => 'recruit_application.admin.inc',
    'file path' => $includes,
  );

  $items[$application_uri . '/edit'] = array(
    'title' => 'Edit',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('recruit_application_form', $application_uri_argument_position),
    'access callback' => 'entity_access',
    'access arguments' => array('edit', 'recruit_application', $application_uri_argument_position),
    'file' => 'recruit_application.admin.inc',
    'file path' => $includes,
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
  );

  foreach (recruit_application_types() as $type => $info) {
    $items['application/add/' . $type] = array(
      'title' => 'Add application',
      'page callback' => 'recruit_application_add',
      'page arguments' => array(2),
      'access callback' => 'entity_access',
      'access arguments' => array('create', 'recruit_application', $type),
      'file' => 'recruit_application.admin.inc',
      'file path' => $includes,
    );
  }

  $items['admin/structure/application-types/%recruit_application_type/delete'] = array(
    'title' => 'Delete',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('recruit_application_type_form_delete_confirm', 4),
    'access arguments' => array('administer recruit_application types'),
    'weight' => 1,
    'type' => MENU_NORMAL_ITEM,
    'file' => 'recruit_application.admin.inc',
    'file path' => $includes,
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function recruit_application_permission() {
  $permissions = array(
    'administer recruit_application types' => array(
      'title' => t('Administer application types'),
      'description' => t('Allows users to configure application types and their fields.'),
      'restrict access' => TRUE,
    ),
    'create recruit_application entities' => array(
      'title' => t('Create applications'),
      'description' => t('Allows users to create applications.'),
      'restrict access' => TRUE,
    ),
    'view recruit_application entities' => array(
      'title' => t('View applications'),
      'description' => t('Allows users to view applications.'),
      'restrict access' => TRUE,
    ),
    'edit any recruit_application entities' => array(
      'title' => t('Edit any applications'),
      'description' => t('Allows users to edit any applications.'),
      'restrict access' => TRUE,
    ),
    'edit own recruit_application entities' => array(
      'title' => t('Edit own applications'),
      'description' => t('Allows users to edit own applications.'),
      'restrict access' => TRUE,
    ),
  );

  return $permissions;
}


/**
 * Implements hook_entity_property_info_alter().
 */
function recruit_application_entity_property_info_alter(&$info) {
  $properties = &$info['recruit_application']['properties'];
  $properties['created'] = array(
    'label' => t("Date created"),
    'type' => 'date',
    'description' => t("The date the node was posted."),
    'setter callback' => 'entity_property_verbatim_set',
    'setter permission' => 'administer nodes',
    'schema field' => 'created',
  );
  $properties['changed'] = array(
    'label' => t("Date changed"),
    'type' => 'date',
    'schema field' => 'changed',
    'description' => t("The date the node was most recently updated."),
  );
  $properties['uid'] = array(
    'label' => t("Author"),
    'type' => 'user',
    'description' => t("The author of the application."),
    'setter callback' => 'entity_property_verbatim_set',
    'setter permission' => 'administer recruit_application entities',
    'required' => TRUE,
    'schema field' => 'uid',
  );
}


/*******************************************************************************
 ********************************* application API's **********************************
 ******************************************************************************/

/**
 * Access callback for application.
 */
function recruit_application_access($op, $application, $account = NULL, $entity_type = NULL) {
  global $user;

  if (!isset($account)) {
    $account = $user;
  }
  switch ($op) {
    case 'create':
      return user_access('administer recruit_application entities', $account)
          || user_access('create recruit_application entities', $account);
    case 'view':
      return user_access('administer recruit_application entities', $account)
          || user_access('view recruit_application entities', $account);
    case 'edit':
      return user_access('administer recruit_application entities')
          || user_access('edit any recruit_application entities')
          || (user_access('edit own recruit_application entities') && ($application->uid == $account->uid));
  }
}

/**
 * Load a application.
 */
function recruit_application_load($aid, $reset = FALSE) {
  $applications = recruit_application_load_multiple(array($aid), array(), $reset);
  return reset($applications);
}

/**
 * Load multiple applications based on certain conditions.
 */
function recruit_application_load_multiple($aids = array(), $conditions = array(), $reset = FALSE) {
  return entity_load('recruit_application', $aids, $conditions, $reset);
}

/**
 * Save application.
 */
function recruit_application_save($application) {
  entity_save('recruit_application', $application);
}

/**
 * Delete single application.
 */
function recruit_application_delete($application) {
  entity_delete('recruit_application', entity_id('recruit_application' ,$application));
}

/**
 * Delete multiple applications.
 */
function recruit_application_delete_multiple($application_ids) {
  entity_delete_multiple('recruit_application', $application_ids);
}


/*******************************************************************************
 ****************************** application Type API's ********************************
 ******************************************************************************/

/**
 * Access callback for application Type.
 */
function recruit_application_type_access($op, $entity = NULL) {
  return user_access('administer recruit_application types');
}

/**
 * Load application Type.
 */
function recruit_application_type_load($application_type) {
  return recruit_application_types($application_type);
}

/**
 * List of application Types.
 */
function recruit_application_types($type_name = NULL) {
  $types = entity_load_multiple_by_name('recruit_application_type', isset($type_name) ? array($type_name) : FALSE);
  return isset($type_name) ? reset($types) : $types;
}

/**
 * Save application type entity.
 */
function recruit_application_type_save($application_type) {
  entity_save('recruit_application_type', $application_type);
}

/**
 * Delete single case type.
 */
function recruit_application_type_delete($application_type) {
  entity_delete('recruit_application_type', entity_id('recruit_application_type' ,$application_type));
}

/**
 * Delete multiple case types.
 */
function recruit_application_type_delete_multiple($application_type_ids) {
  entity_delete_multiple('recruit_application_type', $application_type_ids);
}

/**
 * Implements hook_views_api().
 */
function recruit_application_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'recruit_application'),
  );
}

