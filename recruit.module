<?php

/**
 * @file
 * Global recruit module.
 */

 /**
 * Enable job posting
 */
define('RECRUIT_ENABLED', 1);
define('RECRUIT_DISABLED', 0);

/**
 * Implements hook_menu().
 */
function recruit_menu() {
  $items = array();

  $items['admin/recruit'] = array(
    'title' => 'Recruit',
    'description' => 'Administer your jobs and applications.',
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('access recruit administration pages'),
    'file path' => drupal_get_path('module', 'system'),
    'file' => 'system.admin.inc',
  );
  /*
  $items['admin/recruit/config'] = array(
    'title' => 'Configuration',
    'description' => 'Configure settings for your recruitment site.',
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
    'weight' => 10,
    'file path' => drupal_get_path('module', 'system'),
    'file' => 'system.admin.inc',
  );
   *
   */
  return $items;
}

/**
 * Implements hook_field_info().
 */
function recruit_field_info() {
  return array(
    // We name our field as the associative name of the array.
    'recruit_job' => array(
      'label' => t('Job settings'),
      'description' => t('Define job settings.'),
      'default_widget' => 'recruit_job_default',
      'default_formatter' => 'recruit_job_default',
    ),
  );
}

/**
 * Implements hook_field_widget_info().
 */
function recruit_field_widget_info() {
  return array(
    'recruit_job_default' => array(
      'label' => t('Default'),
      'field types' => array('recruit_job'),
    ),
  );
}

/**
 * Implements hook_field_formatter_info().
 */
function recruit_field_formatter_info() {
  return array(
    'recruit_job_default' => array(
      'label' => t('Default job display.'),
      'field types' => array('recruit_job'),
    ),
  );
}

/**
 * Implements hook_field_widget_form().
 */
function recruit_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  $value = isset($items[$delta]['type']) ? $items[$delta]['type'] : '';

  $widget = $element;
  $widget['#delta'] = $delta;

  switch ($instance['widget']['type']) {
    case 'recruit_job_default':
      $widget += array(
        '#type' => 'textfield',
        '#default_value' => $value,
        '#size' => 7,
        '#maxlength' => 7,
      );
      break;
  }

  $element['type'] = $widget;
  return $element;
}

/**
 * Implements hook_field_formatter_view().
 */
function recruit_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();

  switch ($display['type']) {
    // This formatter simply outputs the field as text and with a color.
    case 'recruit_job_default':
      foreach ($items as $delta => $item) {
        $element[$delta] = array(
          '#type' => 'html_tag',
          '#tag' => 'p',
          '#attributes' => array(
            'style' => 'color: ' . $item['type'],
          ),
          '#value' => t('The color code in this field is @code', array('@code' => $item['type'])),
        );
      }
      break;
  }

  return $element;
}

/**
 * Implements hook_field_is_empty().
 */
function recruit_field_is_empty($item, $field) {
  return empty($item['type']);
}